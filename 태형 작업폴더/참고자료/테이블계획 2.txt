좋은 방향 잡고 있어. 이런 구조의 웹사이트라면 **영양 분석 기반 쇼핑몰**이니까, 핵심 엔터티와 관계를 중심으로 먼저 **기능 흐름 > 데이터 흐름 > 테이블/ERD 설계** 순으로 생각하는 게 깔끔해. 단계별로 같이 정리해보자.

---

## ✅ 전체 기능 흐름

1. **회원가입**
2. **로그인 후 설문조사 진행** (10페이지)
3. **설문 결과 → 영양 성분 분석**
4. **영양 성분에 맞는 추천 재료 도출**
5. **추천 재료 기반 쇼핑**

---

## ✅ 데이터 흐름 요약

- 회원 → 설문결과 제출 → 영양성분 분석 → 추천 재료 조회 → 상품 정보 연동

---

## ✅ 핵심 테이블 설계 윤곽

### 1. `User` (회원 정보)
|컬럼명|설명|속성|
|--|--|--|
|user_id|회원 고유 ID|PK|
|username|아이디|UNIQUE|
|password|비밀번호||
|name|이름||
|address|주소||
|phone|전화번호||
|created_at|가입일시||

---

### 2. `Survey` (설문 응답 저장)
- 10개의 페이지, 각 문항은 따로 테이블로 분리할 수도 있음.
|컬럼명|설명|속성|
|--|--|--|
|survey_id|설문 고유 ID|PK|
|user_id|회원 ID|FK → User(user_id)|
|submitted_at|설문 제출일시||
|question_1_answer|1번 문항 응답||
|...|...||
|question_10_answer|10번 문항 응답||

> 또는 `SurveyAnswer`라는 별도 테이블로 문항별 하나씩 저장하는 형태로도 가능

---

### 3. `NutritionResult` (분석된 영양 성분 결과)
|컬럼명|설명|속성|
|--|--|--|
|result_id|결과 ID|PK|
|user_id|회원 ID|FK|
|protein_level|단백질 수치||
|carb_level|탄수화물 수치||
|fat_level|지방 수치||
|...|기타 영양성분||

---

### 4. `Ingredient` (식재료 마스터)
|컬럼명|설명|속성|
|--|--|--|
|ingredient_id|식재료 ID|PK|
|name|식재료 이름||
|description|설명||
|protein|단백질 함량||
|carb|탄수화물 함량||
|fat|지방 함량||
|...|기타 성분||

---

### 5. `RecommendedIngredient` (추천 재료 매핑)
|컬럼명|설명|속성|
|--|--|--|
|recommend_id|PK|PK|
|result_id|영양결과 ID|FK → NutritionResult|
|ingredient_id|식재료 ID|FK → Ingredient|

---

### 6. `Product` (쇼핑몰 상품)
|컬럼명|설명|속성|
|--|--|--|
|product_id|상품 ID|PK|
|ingredient_id|연관 식재료 ID|FK|
|product_name|상품명||
|price|가격||
|stock|재고||

---

## ✅ ERD 설계 추천 순서

1. 엔터티(테이블) 목록 정리 (위처럼)
2. 각 테이블에 **PK, FK, 관계** 명확히 정리
3. 관계도 (ERD)로 표현: MySQL Workbench, dbdiagram.io, ERDCloud 추천
4. 설문 > 결과 > 추천 흐름이 잘 이어지도록 조인 조건 확인

---

## 🔄 예시 관계 흐름

- `User(1)` : `Survey(1)` → `NutritionResult(1)` → `RecommendedIngredient(N)` → `Ingredient(N)` → `Product(N)`

---

## ➕ 고민해볼 것

- 설문 결과를 분석하는 로직을 어떻게 할 것인지 (단순 매핑 vs 계산 기반)
- 추천 결과는 실시간 분석? or 저장된 결과 재사용?
- 추천 기반 장바구니 기능까지 갈 건지?

---

필요하면 ERD 시각화 바로 그려줄 수 있어. 또는 설문 문항 구성 구체적으로 알려주면 `Survey` 테이블 설계도 더 상세히 도와줄게. 계속 이어가볼까?